// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Roles {
  ADMIN
  CUSTOMER
}

model Customer {
  id        String   @id @default(cuid())
  cpf       String   @unique
  email     String   @unique
  name      String
  password  String
  Order     Order?
  role      Roles    @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id         String       @id @default(cuid())
  name       String
  quantity   Int
  price      Float
  orderItems OrderItems[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model OrderItems {
  id           String @id @default(cuid())
  item         Item   @relation(fields: [itemId], references: [id])
  itemId       String
  itemQuantity Int
  order        Order  @relation(fields: [orderId], references: [id])
  orderId      String

  @@index([itemId])
  @@index([orderId])
}

enum OrderStatus {
  PENDING_PAYMENT
  APPROVED
  IN_SEPARATION
  IN_TRANSPORTATION
  DELIVERED
  CANCELED
}

model Order {
  id          String       @id @unique
  totalAmount Float
  customerId  String       @unique
  customer    Customer     @relation(fields: [customerId], references: [id])
  orderItems  OrderItems[]
  orderStatus OrderStatus
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}
